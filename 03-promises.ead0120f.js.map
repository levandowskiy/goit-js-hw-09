{"mappings":"YAAA,IAAMA,EAASC,SAASC,cAAc,SAChCC,EAAkBF,SAASC,cAAe,uBAC1CE,EAAiBH,SAASC,cAAe,sBACzCG,EAAcJ,SAASC,cAAe,wBA6B5C,SAASI,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,YAAW,WACeC,KAAKC,SAAW,GAElCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAExBA,E,IApCXR,EAAOe,iBAAiB,UAAU,SAACC,GAC/BA,EAAIC,iBAEJ,IAAMC,EAAiBb,EAAYc,MAC7BC,EAAYC,SAASjB,EAAee,OACpCG,EAAaD,SAASlB,EAAgBgB,OAE5C,GAAGC,EAAY,GAAKE,EAAa,GAAKJ,GAAkB,EACtDK,QAAQC,IAAI,yCAId,IAAK,IAAIC,EAAO,EAAGA,EAAOP,EAAgBO,IAAQ,CAG9CnB,EAAcmB,EAFgB,IAATA,EAAaH,EAAaA,EAAaG,EAAOL,GAGxEM,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBe,QAAQC,IAAI,uBAAwCI,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAE3DqB,OAAM,SAAAF,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBe,QAAQC,IAAI,sBAAqCI,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector(\".form\");\nconst firstDelayInput = document.querySelector(`input[name=\"delay\"]`);\nconst delayStepInput = document.querySelector(`input[name=\"step\"]`);\nconst amountInput = document.querySelector(`input[name=\"amount\"]`);\n\nformEl.addEventListener(\"submit\", (evt) => {\n    evt.preventDefault();\n    \n    const amountPromises = amountInput.value;\n    const delayStep = parseInt(delayStepInput.value);\n    const firstDelay = parseInt(firstDelayInput.value);\n\n    if(delayStep < 0 || firstDelay < 0 || amountPromises <= 0){\n      console.log(\"values must be greater than zero\");\n      return\n    }\n\n    for (let step = 0; step < amountPromises; step++) {\n        const promiseDelay = step === 0 ? firstDelay : firstDelay + step * delayStep;\n``\n        createPromise(step, promiseDelay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  }); \n\n    } \n});\n\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            const shouldResolve = Math.random() > 0.3;\n            if (shouldResolve) {\n                resolve({ position, delay })\n              } else {\n                reject({ position, delay })\n              }\n        }, delay)\n    })\n  }\n\n\n  \n     "],"names":["$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$firstDelayInput","$ce04d3a99e08e73b$var$delayStepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","amountPromises","value","delayStep","parseInt","firstDelay","console","log","step","then","param","concat","catch"],"version":3,"file":"03-promises.ead0120f.js.map"}